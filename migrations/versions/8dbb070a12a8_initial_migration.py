"""Initial Migration

Revision ID: 8dbb070a12a8
Revises:
Create Date: 2023-08-08 09:52:25.951783

"""
import os

import sqlalchemy as sa
from alembic import op
from sqlalchemy import text
from werkzeug.security import generate_password_hash

# revision identifiers, used by Alembic.
revision = "8dbb070a12a8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "department",
        sa.Column("dept_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("dept_name", sa.String(length=100), nullable=True),
        sa.Column("created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("created_by", sa.String(length=50), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("modified_by", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("dept_id"),
        sa.UniqueConstraint("dept_name"),
    )
    op.create_table(
        "role",
        sa.Column("role_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("role_name", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("created_by", sa.String(length=50), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("modified_by", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("role_id"),
        sa.UniqueConstraint("role_name"),
    )
    op.create_table(
        "token_block_list",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("jti", sa.String(length=36), nullable=False),
        sa.Column("type", sa.String(length=16), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("created_by", sa.String(length=50), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("modified_by", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("token_block_list", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_token_block_list_jti"), ["jti"], unique=False)

    op.create_table(
        "function_with_department",
        sa.Column("func_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("dept_id", sa.BIGINT(), nullable=True),
        sa.Column("dept_name", sa.String(length=100), nullable=True),
        sa.Column("sub_function", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("created_by", sa.String(length=50), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("modified_by", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["dept_id"],
            ["department.dept_id"],
        ),
        sa.PrimaryKeyConstraint("func_id"),
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_name", sa.String(length=100), nullable=True),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("middle_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("manager_name", sa.String(length=100), nullable=True),
        sa.Column("employee_code", sa.String(length=100), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("mobile_number", sa.String(length=100), nullable=True),
        sa.Column("status", sa.String(length=100), nullable=True),
        sa.Column("status_changed_by", sa.String(length=100), nullable=True),
        sa.Column("status_changed_on", sa.DateTime(), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=True),
        sa.Column("last_login_on", sa.DateTime(), nullable=True),
        sa.Column("func_id", sa.BIGINT(), nullable=True),
        sa.Column("approved", sa.Boolean(), nullable=True),
        sa.Column("approved_by", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("role_id", sa.BIGINT(), nullable=True),
        sa.Column("dept_id", sa.BIGINT(), nullable=True),
        sa.Column("created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("created_by", sa.String(length=50), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("modified_by", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["dept_id"],
            ["department.dept_id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.role_id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("employee_code"),
        sa.UniqueConstraint("user_name"),
    )
    op.create_table(
        "user_role_dept_mapping",
        sa.Column("user_role_dept_mapping_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("func_id", sa.BIGINT(), nullable=True),
        sa.Column("user_id", sa.BIGINT(), nullable=True),
        sa.Column("role_id", sa.BIGINT(), nullable=True),
        sa.Column("dept_id", sa.BIGINT(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_on", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("created_by", sa.String(length=50), nullable=True),
        sa.Column("modified_on", sa.DateTime(), nullable=True),
        sa.Column("modified_by", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["dept_id"],
            ["department.dept_id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.role_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_role_dept_mapping_id"),
    )
    # ### end Alembic commands ###
    # Create the 'admin' role
    op.execute(
        text(
            "INSERT INTO role (role_name, is_active, created_on, created_by) " "VALUES ('admin', true, now(), 'system')"
        )
    )

    connection = op.get_bind()
    result = connection.execute(text("SELECT role_id FROM role WHERE role_name = 'admin'"))
    admin_role_id = result.scalar()

    admin_password = generate_password_hash(os.environ.get("SECRET_KEY"))

    op.execute(
        text(
            "INSERT INTO user (user_name, first_name, last_name, email, password, is_active, role_id, created_on, created_by) "
            "VALUES ('admin', 'Admin', 'User', 'admin@example.com', :hashed_password_here, true, :role_id, now(), 'system')"
        ).bindparams(hashed_password_here=admin_password, role_id=admin_role_id)
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_role_dept_mapping")
    op.drop_table("user")
    op.drop_table("function_with_department")
    with op.batch_alter_table("token_block_list", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_token_block_list_jti"))

    op.drop_table("token_block_list")
    op.drop_table("role")
    op.drop_table("department")
    # ### end Alembic commands ###
